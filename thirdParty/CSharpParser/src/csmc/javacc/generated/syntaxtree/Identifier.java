//
// Generated by JTB 1.3.2
//

package csmc.javacc.generated.syntaxtree;

/**
 * Grammar production:
 * f0 -> <IDENTIFIER>
 *       | <ADD>
 *       | <ALIAS>
 *       | <ASYNC>
 *       | <ASCENDING>
 *       | <ASSEMBLY>
 *       | <AWAIT>
 *       | <BY>
 *       | <DESCENDING>
 *       | <DYNAMIC>
 *       | <EQUALS>
 *       | <FIELD>
 *       | <FROM>
 *       | <GET>
 *       | <GROUP>
 *       | <INTO>
 *       | <JOIN>
 *       | <LET>
 *       | <METHOD>
 *       | <MODULE>
 *       | <NAMEOF>
 *       | <ON>
 *       | <ORDERBY>
 *       | <PARAM>
 *       | <PARTIAL>
 *       | <PROPERTY>
 *       | <REMOVE>
 *       | <SELECT>
 *       | <SET>
 *       | <TYPE>
 *       | <VAR>
 *       | <WHEN>
 *       | <WHERE>
 *       | <YIELD>
 */
public class Identifier implements Node {
   public NodeChoice f0;

   public Identifier(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(csmc.javacc.generated.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(csmc.javacc.generated.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(csmc.javacc.generated.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(csmc.javacc.generated.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

