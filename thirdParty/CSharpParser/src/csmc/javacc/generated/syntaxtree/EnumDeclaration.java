//
// Generated by JTB 1.3.2
//

package csmc.javacc.generated.syntaxtree;

/**
 * Grammar production:
 * f0 -> AttributesOpt()
 * f1 -> EnumModifierList()
 * f2 -> <ENUM>
 * f3 -> Identifier()
 * f4 -> EnumBaseOpt()
 * f5 -> EnumBody()
 * f6 -> SemicolonOpt()
 */
public class EnumDeclaration implements Node {
   public AttributesOpt f0;
   public EnumModifierList f1;
   public NodeToken f2;
   public Identifier f3;
   public EnumBaseOpt f4;
   public EnumBody f5;
   public SemicolonOpt f6;

   public EnumDeclaration(AttributesOpt n0, EnumModifierList n1, NodeToken n2, Identifier n3, EnumBaseOpt n4, EnumBody n5, SemicolonOpt n6) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
   }

   public EnumDeclaration(AttributesOpt n0, EnumModifierList n1, Identifier n2, EnumBaseOpt n3, EnumBody n4, SemicolonOpt n5) {
      f0 = n0;
      f1 = n1;
      f2 = new NodeToken("enum");
      f3 = n2;
      f4 = n3;
      f5 = n4;
      f6 = n5;
   }

   public void accept(csmc.javacc.generated.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(csmc.javacc.generated.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(csmc.javacc.generated.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(csmc.javacc.generated.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

