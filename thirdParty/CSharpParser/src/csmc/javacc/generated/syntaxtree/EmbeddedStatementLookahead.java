//
// Generated by JTB 1.3.2
//

package csmc.javacc.generated.syntaxtree;

/**
 * Grammar production:
 * f0 -> UnaryExpression() AssignmentOperator()
 *       | PrimaryExpression() NullConditionalOperations()
 *       | PrimaryExpression() <SEMICOLON>
 *       | <AWAIT>
 *       | <DBL_PLUS>
 *       | <DBL_MINUS>
 *       | <NEW>
 *       | <LBRACE>
 *       | <SEMICOLON>
 *       | <IF>
 *       | <SWITCH>
 *       | <WHILE>
 *       | <DO>
 *       | <FOR>
 *       | <FOREACH>
 *       | <BREAK>
 *       | <CONTINUE>
 *       | <GOTO>
 *       | <RETURN>
 *       | <THROW>
 *       | <TRY>
 *       | <CHECKED>
 *       | <UNCHECKED>
 *       | <LOCK>
 *       | <USING>
 *       | <YIELD>
 *       | <UNSAFE>
 *       | <FIXED>
 */
public class EmbeddedStatementLookahead implements Node {
   public NodeChoice f0;

   public EmbeddedStatementLookahead(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(csmc.javacc.generated.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(csmc.javacc.generated.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(csmc.javacc.generated.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(csmc.javacc.generated.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

