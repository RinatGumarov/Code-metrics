//
// Generated by JTB 1.3.2
//

package csmc.javacc.generated.syntaxtree;

/**
 * Grammar production:
 * f0 -> Literal() PrimaryNoArrayCreationExpressionPrime2()
 *       | AnonymousMethodExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | SimpleName() PrimaryNoArrayCreationExpressionPrime2()
 *       | ParanthesizedExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | MemberAccess() PrimaryNoArrayCreationExpressionPrime2()
 *       | InvocationExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | ThisAccess() PrimaryNoArrayCreationExpressionPrime2()
 *       | BaseAccess() PrimaryNoArrayCreationExpressionPrime2()
 *       | PostIncrementExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | PostDecrementExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | ObjectCreationExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | DelegateCreationExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | AnonymousObjectCreationExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | TypeofExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | CheckedExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | UncheckedExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | DefaultValueExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | NameofExpression() PrimaryNoArrayCreationExpressionPrime2()
 *       | PointerMemberAccess() PrimaryNoArrayCreationExpressionPrime2()
 *       | SizeofExpression() PrimaryNoArrayCreationExpressionPrime2()
 */
public class PrimaryNoArrayCreationExpression implements Node {
   public NodeChoice f0;

   public PrimaryNoArrayCreationExpression(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(csmc.javacc.generated.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(csmc.javacc.generated.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(csmc.javacc.generated.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(csmc.javacc.generated.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

