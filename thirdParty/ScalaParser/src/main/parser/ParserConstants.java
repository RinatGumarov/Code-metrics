/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package main.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LCURBRACE = 5;
  /** RegularExpression Id. */
  int RCURBRACE = 6;
  /** RegularExpression Id. */
  int LBRACE = 7;
  /** RegularExpression Id. */
  int RBRACE = 8;
  /** RegularExpression Id. */
  int LETTER = 9;
  /** RegularExpression Id. */
  int DIGIT = 10;
  /** RegularExpression Id. */
  int NONZERODIGIT = 11;
  /** RegularExpression Id. */
  int DEF = 12;
  /** RegularExpression Id. */
  int VAL = 13;
  /** RegularExpression Id. */
  int VAR = 14;
  /** RegularExpression Id. */
  int TYPE = 15;
  /** RegularExpression Id. */
  int THIS = 16;
  /** RegularExpression Id. */
  int IMPLICIT = 17;
  /** RegularExpression Id. */
  int LAZY = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int TRY = 23;
  /** RegularExpression Id. */
  int CATCH = 24;
  /** RegularExpression Id. */
  int FINALLY = 25;
  /** RegularExpression Id. */
  int THROW = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int SUPER = 28;
  /** RegularExpression Id. */
  int IMPORT = 29;
  /** RegularExpression Id. */
  int ABSTRACT = 30;
  /** RegularExpression Id. */
  int FINAL = 31;
  /** RegularExpression Id. */
  int SEALED = 32;
  /** RegularExpression Id. */
  int PRIVATE = 33;
  /** RegularExpression Id. */
  int PROTECTED = 34;
  /** RegularExpression Id. */
  int OVERRIDE = 35;
  /** RegularExpression Id. */
  int CASE = 36;
  /** RegularExpression Id. */
  int CLASS = 37;
  /** RegularExpression Id. */
  int OBJECT = 38;
  /** RegularExpression Id. */
  int TRAIT = 39;
  /** RegularExpression Id. */
  int EXTENDS = 40;
  /** RegularExpression Id. */
  int WITH = 41;
  /** RegularExpression Id. */
  int NEW = 42;
  /** RegularExpression Id. */
  int FOR = 43;
  /** RegularExpression Id. */
  int YIELD = 44;
  /** RegularExpression Id. */
  int PACKAGE = 45;
  /** RegularExpression Id. */
  int MATCH = 46;
  /** RegularExpression Id. */
  int EQUALS_SIGN = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "<LETTER>",
    "<DIGIT>",
    "<NONZERODIGIT>",
    "\"def\"",
    "\"val\"",
    "\"var\"",
    "\"type\"",
    "\"this\"",
    "\"implicit\"",
    "\"lazy\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"try\"",
    "\"catch\"",
    "\"finally\"",
    "\"throw\"",
    "\"return\"",
    "\"super\"",
    "\"import\"",
    "\"abstract\"",
    "\"final\"",
    "\"sealed\"",
    "\"private\"",
    "\"protected\"",
    "\"override\"",
    "\"case\"",
    "\"class\"",
    "\"object\"",
    "\"trait\"",
    "\"extends\"",
    "\"with\"",
    "\"new\"",
    "\"for\"",
    "\"yield\"",
    "\"package\"",
    "\"match\"",
    "\"=\"",
    "\".\"",
    "\",\"",
    "\"=>\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\"@\"",
    "\"_\"",
    "\":\"",
    "\"\\\"\"",
    "\"*\"",
    "\"<-\"",
    "\"-\"",
    "\"+\"",
    "\"~\"",
    "\"!\"",
    "\"|\"",
    "\">:\"",
    "\"<:\"",
    "\"<%\"",
  };

}
